<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DataViewer"
                    xmlns:uiConverters="clr-namespace:DataViewer.Converters.UI"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <!-- application startup class (Bootstrapper) -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <local:Bootstrapper x:Key="Bootstrapper"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!-- Language enumerator access -->
    <ObjectDataProvider x:Key="LanguageValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="local:Language"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!-- Set ToolBar buttons margins -->
    <Style TargetType="Button" x:Key="ToolBarButton">
        <Style.Setters>
            <Setter Property="Margin" Value="3, 0, 3, 0"/>
        </Style.Setters>
    </Style>

    <!-- DataGrid style -->
    <Style TargetType="DataGrid" x:Key="ContentTable">
        <Style.Setters>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Height" Value="350"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="CanUserAddRows" Value="False"/>
        </Style.Setters>
    </Style>

    <!-- Derived from ContentTable. 
         Additionally sets DataGrid foreground to gray when the grid is not interactable -->
    <Style TargetType="DataGrid" x:Key="GrayForegroundWhenDisabled" BasedOn="{StaticResource ContentTable}">
        <Style.Triggers>
            <Trigger Property="IsHitTestVisible" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsHitTestVisible" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- converters -->
    <uiConverters:TextToVisibilityConverter x:Key="TextToVisibilityConverter" />
    <uiConverters:InverseBoolConverter x:Key="InverseBoolConverter" />
    <uiConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <uiConverters:IsValidConverter x:Key="IsValidConverter" />
</ResourceDictionary>