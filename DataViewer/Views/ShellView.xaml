<Window x:Class="DataViewer.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cal="http://www.caliburnproject.org"
        mc:Ignorable="d"
        Title="DataViewer" MinHeight="520" Height="520" MaxHeight="520" Width="1000">
    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenFile}"/>
    </Window.InputBindings>

    <Window.Resources>
        
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        
        <ToolBar Grid.Row="0">
            <Button x:Name="OpenFile" Style="{StaticResource ToolBarButton}">
                <Button.Content>
                    Open
                </Button.Content>
                <Button.ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Open file</TextBlock>
                        <TextBlock>
                        Search your computer or local network
                        <LineBreak/>
                        for a file and open it for editing.
                        </TextBlock>
                        <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                        <WrapPanel>
                            <TextBlock FontStyle="Italic">shortcut: Ctrl + O</TextBlock>
                        </WrapPanel>
                    </StackPanel>
                </Button.ToolTip>
            </Button>
            <Button x:Name="ExportToExcel" Style="{StaticResource ToolBarButton}">
                Export
                <Button.ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Export To Excel</TextBlock>
                        <TextBlock>Exports data set to an excel file.</TextBlock>
                        <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                        <WrapPanel>
                            <TextBlock FontStyle="Italic">shortcut: Ctrl + E</TextBlock>
                        </WrapPanel>
                    </StackPanel>
                </Button.ToolTip>
            </Button>
            <Button x:Name="Undo" Style="{StaticResource ToolBarButton}">
                Undo
                <Button.ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Undo Last Edit</TextBlock>
                        <TextBlock>Restores previous value of the least committed cell.</TextBlock>
                        <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                        <WrapPanel>
                            <TextBlock FontStyle="Italic">shortcut: Ctrl + Z</TextBlock>
                        </WrapPanel>
                    </StackPanel>
                </Button.ToolTip>
            </Button>
            <Button x:Name="Redo" Style="{StaticResource ToolBarButton}">
                Redo
                <Button.ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Redo Last Edit</TextBlock>
                        <TextBlock>
                        Revokes last undo command bringing back the original value.
                        <LineBreak/>
                        Making a new edit disables possibility to redo commands executed before it.
                        </TextBlock>
                        <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                        <WrapPanel>
                            <TextBlock FontStyle="Italic">shortcut: Ctrl + R</TextBlock>
                        </WrapPanel>
                    </StackPanel>
                </Button.ToolTip>
            </Button>
            <Button x:Name="CheckDataConsistency" Style="{StaticResource ToolBarButton}">
                Scan
            </Button>
            <Button x:Name="HealDocument" Style="{StaticResource ToolBarButton}">
                Heal
            </Button>
        </ToolBar>

        <StackPanel Grid.Row="1" Orientation="Horizontal">

            <!-- localization entry filters and data grid -->
            <StackPanel Orientation="Vertical">
                <Grid Height="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Label Margin="10, 0, 10, 0">Speaker Filter</Label>
                    <Label Grid.Column="1" Margin="10, 0, 10, 0">GUID Filter</Label>
                    <TextBox x:Name="SpeakerFilter" Grid.Row="1" Margin="10, 5, 10, 0"></TextBox>
                    <TextBox x:Name="GUIDFilter" Grid.Column="1" Grid.Row="1" Margin="10, 5, 10, 0"></TextBox>
                </Grid>

                <DataGrid x:Name="Entries" Style="{StaticResource GrayForegroundWhenDisabled}" 
                          IsHitTestVisible="{Binding IsTranslating, Converter={StaticResource InverseBoolConverter}}"
                          SelectedItem="{Binding SelectedEntry}"
                          cal:Message.Attach="[Event CellEditEnding] = [Action Entries_CellEditEnding($eventArgs)]">
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Expander IsExpanded="True">
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="Gray" FontSize="14" VerticalAlignment="Bottom" />
                                                            <TextBlock Text="{Binding ItemCount}" FontSize="14" Foreground="Green" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" 
                                                                       VerticalAlignment="Bottom"/>
                                                            <TextBlock Text=" item(s)" FontSize="14" Foreground="Silver" FontStyle="Italic" VerticalAlignment="Bottom" />
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Speaker" Width="60" Binding="{Binding Path=Speaker}"/>
                        <DataGridTextColumn Header="GUID" Width="250" IsReadOnly="True" Binding="{Binding Path=GUID}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>

            <!-- variant filter and data grid -->
            <StackPanel Orientation="Vertical">
                <Grid Height="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Label Margin="10, 0, 10, 0">Name Filter</Label>
                    <TextBox x:Name="NameFilter" Grid.Row="1" Margin="10, 5, 10, 0"></TextBox>
                </Grid>

                <DataGrid Name="Variants" Style="{StaticResource GrayForegroundWhenDisabled}" 
                          IsHitTestVisible="{Binding IsTranslating, Converter={StaticResource InverseBoolConverter}}"
                          Width="80"
                          ItemsSource="{Binding SelectedEntry.Variants}" SelectedItem="{Binding SelectedVariant}"
                          cal:Message.Attach="[Event CellEditEnding] = [Action Variants_CellEditEnding($eventArgs)]">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Name}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>

            <!-- text line filters and data grid -->
            <StackPanel Orientation="Vertical">
                <Grid Height="50" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Label Margin="10, 0, 10, 0">Text Filter</Label>
                    <TextBox x:Name="TextFilter" Grid.Row="1" Margin="10, 5, 10, 0"></TextBox>
                    <Button x:Name="Translate" Grid.Column="1" Grid.Row="1" Margin="10, 5, 10, 0" Content="Translate"/>
                    <ComboBox x:Name="TranslationLanguage" Grid.Column="1" Grid.Row="0" Margin="10, 5, 10, 0" SelectedIndex="0" 
                              ItemsSource="{Binding Source={StaticResource LanguageValues}}" SelectedItem="{Binding TranslationLanguage}"
                              MinWidth="80"/>
                </Grid>
                <DataGrid x:Name="TextLines" Style="{StaticResource GrayForegroundWhenDisabled}" Width="340"
                          IsHitTestVisible="{Binding IsTranslating, Converter={StaticResource InverseBoolConverter}}"
                          ItemsSource="{Binding SelectedVariant.TextLines, Mode=TwoWay}" SelectedItem="{Binding SelectedTextLine, Mode=TwoWay}" 
                          cal:Message.Attach="[Event CellEditEnding] = [Action TextLines_CellEditEnding($eventArgs)]">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Text" Width="*" SortMemberPath="Text">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <TextBox TextWrapping="Wrap" Text="{Binding Path=Text}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Language" Width="80" SortMemberPath="Language">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{Binding Path=Language}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox Name="LanguageComboBox" ItemsSource="{Binding Source={StaticResource LanguageValues}}" 
                                              SelectedItem="{Binding Path=Language}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <TextBlock FontStyle="Italic" TextWrapping="Wrap" Margin="10">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat='Translation ({0}): {1}'>
                                        <Binding Path="TranslationLanguageShortId" />
                                        <Binding Path="TranslatedText" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="DetailsVisibility" Value="{Binding TranslatedText, Converter={StaticResource TextToVisibilityConverter}}"/>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </StackPanel>
        </StackPanel>

        <StatusBar Grid.Row="2" Height="30">
            
            
            <StatusBarItem Margin="5, 0, 0, 0">
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsTranslating, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ProgressBar x:Name="StatusProgressBar" Width="100" Height="15" Orientation="Horizontal" IsIndeterminate="True"/>
                    <TextBlock Text="Translating..." />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
